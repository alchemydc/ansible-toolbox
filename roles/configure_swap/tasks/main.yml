# Proxmox kills LXC's that OOM without remorse, which is pretty uncool.
# This task uses any remaining space on the SSD's to create swap partitions
# since swap on ZFS is non-performant.
# Tested on hetzner AX41 and AX51 NVME SSD's configured with ZFS as proxmox root, but in theory should work 
# on any Proxmox ZFS/root installs with free space *after* the 3 default partitions (bios boot, EFI, and ZFS)

- name: Install parted
  apt:
    name: parted
    state: present
    update_cache: true
  tags:
    - swap

- name: Read device information from first SSD
  parted: "device=/dev/nvme0n1 unit=MiB"
  register: nvme0n1_info
  tags:
    - swap

#- name: Debug the device info
  #debug:
    #msg: "nvme0n1_info: {{ nvme0n1_info.partitions }}"
    #msg: "nvme0n1_info.partitions[2]: {{ nvme0n1_info.partitions[2] }}"

    # "msg": "nvme0n1_info.partitions[0]: {'num': 1, 'begin': 0.02, 'end': 1.0, 'size': 0.98, 'fstype': '', 'name': '', 'flags': ['bios_grub'], 'unit': 'mib'}"
    # "msg": "nvme0n1_info.partitions[1]: {'num': 2, 'begin': 1.0, 'end': 513.0, 'size': 512.0, 'fstype': 'fat32', 'name': '', 'flags': ['boot', 'esp'], 'unit': 'mib'}"
    # "msg": "nvme0n1_info.partitions[2]: {'num': 3, 'begin': 513.0, 'end': 460800.0, 'size': 460287.0, 'fstype': 'zfs', 'name': '', 'flags': [], 'unit': 'mib'}"

- name: Partition the first SSD
  parted:
    device: /dev/nvme0n1
    fs_type: linux-swap
    label: gpt
    name: swap
    number: 4
    part_end: "100%"
    part_start: "{{ nvme0n1_info.partitions[2].end + 1}}MiB" 
    state: present
  tags:
    - swap

- name: Read device information from second SSD
  parted: "device=/dev/nvme0n1 unit=MiB"
  register: nvme1n1_info
  tags:
    - swap

- name: Partition the second SSD
  parted:
    device: /dev/nvme1n1
    fs_type: linux-swap
    label: gpt
    name: swap
    number: 4
    part_end: "100%"
    part_start: "{{ nvme1n1_info.partitions[2].end + 1}}MiB" 
    state: present
  tags:
    - swap

- name: Create swap filesystems on SSD's
  filesystem:
    fstype: swap
    dev: "/dev/{{ item }}"
  loop:
    - "nvme0n1p4"
    - "nvme1n1p4"
  tags:
    - swap

- name: Get blkid for first swap partition
  command: blkid -s UUID -o value /dev/nvme0n1p4
  register: swap1_blkid
  tags:
    - swap

#- name: Debug the nvme0 swap blkid
#  debug:
#    msg: "nvme0 swap blkid: {{ swap1_blkid.stdout }}"

- name: Write nvme0 swap partition entry to /etc/fstab
  lineinfile:
    path: '/etc/fstab'
    line: 'UUID={{ swap1_blkid.stdout }}   none            swap    sw              0       0'
    state: present
  tags:
    - swap

- name: Get blkid for second swap partition
  command: blkid -s UUID -o value /dev/nvme1n1p4
  register: swap2_blkid
  tags:
    - swap

#- name: Debug the nvme1 swap blkid
#  debug:
#    msg: "nvme1 swap blkid: {{ swap2_blkid.stdout }}"
#    tags:
#      - swap

- name: Write nvme1 swap partition entry to /etc/fstab
  lineinfile:
    path: '/etc/fstab'
    line: 'UUID={{ swap2_blkid.stdout }}   none            swap    sw              0       0'
    state: present
  tags:
    - swap

- name: Enable swap partitions
  command: 'swapon -a'
  tags:
    - swap

