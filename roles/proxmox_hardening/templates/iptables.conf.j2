# iptables template v1.4
*filter
#:INPUT DROP
:INPUT ACCEPT
:FORWARD ACCEPT
:OUTPUT ACCEPT
:LOGANDDROP - [0:0]
-A INPUT -i lo -j ACCEPT
-A INPUT -i wg0 -m state --state NEW -j ACCEPT
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
# temp rule for permitting let's encrypt cert renewal
#-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
-A INPUT -p udp -m state --state NEW -m udp --dport 51820 -j ACCEPT
-A INPUT -i {{ private_bridge }} -p udp -m udp --dport 67 -j ACCEPT
# DHCP over evpn/vxlan [wip]
#-A INPUT -i vrf_evpnzone -p udp -m udp --dport 67 -j ACCEPT
#-A INPUT -i fwbr* -p udp -m udp --dport 67 -j ACCEPT
#-A INPUT -i {{ private_bridge }} -p udp -m udp --dport 53 -j ACCEPT
# disallow routing from anycast_subnet[1] to anycast_subnet[0]
-A INPUT -i {{ sdn_bridge }} -s {{ anycast_subnets[1] }} -d {{ anycast_subnets[0] }} -m state --state NEW -j LOGANDDROP
-A INPUT -j LOGANDDROP
-A LOGANDDROP -m limit --limit 1/sec -j LOG --log-prefix "IPT_" --log-level 7
-A LOGANDDROP -j DROP
COMMIT
*raw
:PREROUTING ACCEPT
:OUTPUT ACCEPT
-A PREROUTING -i fwbr+ -j CT --zone 1
COMMIT
*nat
:PREROUTING ACCEPT
:INPUT ACCEPT
:OUTPUT ACCEPT
:POSTROUTING ACCEPT
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport 80 -j DNAT --to-destination {{ docker_vm_host }}:80
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport 443 -j DNAT --to-destination {{ docker_vm_host }}:443
# masq traffic from private subnet guests
#-A POSTROUTING -s {{ private_subnet }}  -o {{ public_bridge }} -j MASQUERADE
-A POSTROUTING -s {{ private_subnet }}  -o {{ public_bridge }} -j SNAT --to-source {{ public_ip }}

# masq traffic from SDN subnet guests
{% for anycast_subnet in anycast_subnets %}
-A POSTROUTING -s {{ anycast_subnet }}  -o {{ public_bridge }} -j SNAT --to-source {{ public_ip }}
{% endfor%}

COMMIT
