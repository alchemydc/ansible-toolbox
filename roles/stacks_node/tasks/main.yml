- name: Install acl via apt
# needed for running tasks as svc_user properly
# curl just because
  apt:
    name:
      - acl
      - curl
    state: present
    update_cache: yes
  become: true

- name: Create service user
  user:
    name: "{{ svc_user }}"
    password: '*'   # pw is locked/disabled.  key auth only + passwordless sudo
    state: present
    shell: /bin/bash
    createhome: yes
    home: "/home/{{ svc_user }}"
    #uid: "{{ svc_uid }}"
  become: true

- name: Create data directories for signer and node
  file:
    path: "/home/{{ svc_user }}/{{ item }}"
    state: directory
    owner: "{{ svc_user }}"
    group: "{{ svc_user }}"
    mode: 0700
  loop:
    - "node"
    - "signer"
  become: true
  become_user: "{{ svc_user }}"

- name: Deploy signer-config.toml from template
  template:
    src: signer-config.toml.j2
    dest: /home/{{ svc_user }}/signer/signer-config.toml
    owner: "{{ svc_user }}"
    group: "{{ svc_user }}"
    mode: 0600
  become: true
  become_user: "{{ svc_user }}"
  notify: restart stacks-signer

- name: Deploy node-config.toml from template
  template:
    src: node-config.toml.j2
    dest: /home/{{ svc_user }}/node/node-config.toml
    owner: "{{ svc_user }}"
    group: "{{ svc_user }}"
    mode: 0600
  become: true
  become_user: "{{ svc_user }}"
  notify: restart stacks-node

- name: Deploy .profile from template
  template:
    src: profile.j2
    dest: /home/{{ svc_user }}/.profile
    owner: "{{ svc_user }}"
    group: "{{ svc_user }}"
    mode: 0600
  become: true
  become_user: "{{ svc_user }}"

- name: Build stacks from source
  include_tasks: build_stacks.yml
  #vars:
  #  svc_user: "{{ svc_user }}"
  #  stacks_repo: "{{ stacks_repo }}"
  #  stacks_version: "{{ stacks_version }}"

- name: Install nodejs
  include_tasks: install_nodejs.yml
  #vars:
  #  svc_user: "{{ svc_user }}"
  #  nodejs_version: "{{ nodejs_version }}"
  #  nodesource_repo_key_url: "{{ nodesource_repo_key_url }}"
  #  yarn_repo_key_url: "{{ yarn_repo_key_url }}"
  #  yarn_repo_url: "{{ yarn_repo_url }}"

- name: Install stacks cli npm package
  npm:
    name: "{{ item }}"
    path: "/home/{{ svc_user }}"
    state: present
  loop:
    - "@stacks/cli"
    - "stacks-gen"
  become: true
  become_user: "{{ svc_user }}"

- name: Deploy stacks-node.service from template
  template:
    src: stacks-node.service.j2
    dest: /etc/systemd/system/stacks-node.service
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart stacks-node

- name: Deploy stacks-signer.service from template
  template:
    src: stacks-signer.service.j2
    dest: /etc/systemd/system/stacks-signer.service
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart stacks-signer

- name: Enable and start stacks-node and stacks-signer
  systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
    daemon_reload: yes
  loop:
    - stacks-node
    - stacks-signer
  become: true

- name: Deploy generate_stacking_signature.sh from template
  template:
    src: generate_stacking_signature.sh.j2
    dest: /home/{{ svc_user }}/generate_stacking_signature.sh
    owner: "{{ svc_user }}"
    group: "{{ svc_user }}"
    mode: 0700
  become: true
  become_user: "{{ svc_user }}"
  tags: generate_stacking_signature

- name: Update sudoers to permit {{ svc_user }} to start/stop stacks services
  community.general.sudoers:
    name: allow-stacks-start-stop
    state: present
    user: "{{ svc_user }}"
    commands: /bin/systemctl stop stacks-signer,/bin/systemctl stop stacks-node,/bin/systemctl start stacks-signer,/bin/systemctl start stacks-node
  become: true

- name: Deploy set_stacks_chainstate_perms.sh from template
  template:
    src: set_stacks_chainstate_perms.sh.j2
    dest: "/home/{{ svc_user }}/set_stacks_chainstate_perms.sh"
    owner: "root"
    group: "root"
    mode: 0744
  become: true

- name: Update sudoers to allow {{ svc_user }} to fix perms on chaindata
# can't pass params to the module, so we have to have a script to call
  community.general.sudoers:
    name: allow-stacks-set-perms
    state: present
    user: "{{ svc_user }}"
    commands: ['/home/{{ svc_user }}/set_stacks_chainstate_perms.sh']
  become: true

- name: Deploy restore_from_snapshot.sh from template
  template:
    src: restore_from_snapshot.sh.j2
    dest: "/home/{{ svc_user }}/restore_from_snapshot.sh"
    owner: "{{ svc_user }}"
    mode: 0740
  become: true
  become_user: "{{ svc_user }}"

