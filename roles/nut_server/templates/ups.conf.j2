# means that the system will try to reconnect to the UPS device three times if the connection is lost. If after three attempts the connection is not reestablished, the system will stop trying.
maxretry = 3

{% if synology_support is defined and synology_support == true %}
[ups]
   driver = usbhid-ups
   port = auto
   #port = "/dev/{{ ups.name }}"    # this will work but udev likely won't create the required symlink without a reboot so using auto by default
   desc = "synology compatible UPS" # manually verify multi-UPS config if you need synology support
   vendorid = {{ ups.vendorid }}
   productid = {{ ups.productid }}
{% if usb_ups_details.results[loop.index0].stdout is contains("Cyber Power") %}
   # cyber power UPS detected
   # ref: https://github.com/networkupstools/nut/issues/578
   # anything else for offdelay and ondelay will NOT work properly for cyber power UPS
   # and load will be turned back on after shutdown, even if mains power isn't back.
   offdelay = 60
   ondelay = 0   
   # adjusting polling interval to prevent disconnects
   # see https://raspberrypi.stackexchange.com/questions/66611/nut-cyberpower-data-stale
   # and https://serverfault.com/questions/994338/how-can-i-fix-my-ups-repeatedly-disconnecting-and-reconnecting
   pollinterval = 5
{% else %}
   #pollinterval = 1
   # adjusting pollinterval higher to avoid false positives when UPS goes on battery very briefly
   pollinterval = 5
{% endif %}
{% else %} # (no synology support, so we iterate over ups_devices and create a ups.conf entry for each
{% for ups in ups_devices %}
[{{ ups.name }}]
   driver = usbhid-ups
   port = auto
   #port = "/dev/{{ ups.name }}"    # this will work but udev likely won't create the required symlink without a reboot so using auto by default
   desc = "{{ usb_ups_details.results[loop.index0].stdout }}"
   vendorid = {{ ups.vendorid }}
   productid = {{ ups.productid }}
{% if usb_ups_details.results[loop.index0].stdout is contains("Cyber Power") %} 
   # cyber power UPS detected
   # ref: https://github.com/networkupstools/nut/issues/578
   # anything else for offdelay and ondelay will NOT work properly for cyber power UPS
   # and load will be turned back on after shutdown, even if mains power isn't back.
   offdelay = 60
   ondelay = 0   
   # adjusting polling interval to prevent disconnects
   # see https://raspberrypi.stackexchange.com/questions/66611/nut-cyberpower-data-stale
   # and https://serverfault.com/questions/994338/how-can-i-fix-my-ups-repeatedly-disconnecting-and-reconnecting
   pollinterval = 5

{% else %} 
   #pollinterval = 1
   # adjusting pollinterval higher to avoid false positives when UPS goes on battery very briefly
   pollinterval = 5

{% endif %}
{% endfor %}

{% endif %}
