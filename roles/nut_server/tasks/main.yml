- name: Enumerate types of UPSes connected
  shell: lsusb -d {{ item.vendorid }}:{{ item.productid }}
  register: usb_ups_details
  changed_when: false
  loop: "{{ ups_devices }}"
  
- name: Install nut server
  apt:
    name: nut-server
    state: present
    update_cache: yes
  become: true

- name: Deploy nut udev rules from template
  template:
    src: 90-nut-usbups.rules.j2
    dest: /etc/udev/rules.d/90-nut-usbups.rules
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart udev

- name: Deploy nut ups.conf from template
  template:
    src: ups.conf.j2
    dest: /etc/nut/ups.conf
    owner: root
    group: nut
    mode: 0640
  become: true
  notify: restart nut-services

- name: Deploy upsd.conf from template
  template:
    src: upsd.conf.j2
    dest: /etc/nut/upsd.conf
    owner: root
    group: nut
    mode: 0640
  become: true
  notify: restart nut-services

- name: Deploy nut.conf from template
  template:
    src: nut.conf.j2
    dest: /etc/nut/nut.conf
    owner: root
    group: nut
    mode: 0640
  become: true
  notify: restart nut-services

- name: Deploy upsmon.conf from template
  template:
    src: upsmon.conf.j2
    dest: /etc/nut/upsmon.conf
    owner: root
    group: nut
    mode: 0640
  become: true
  notify: restart nut-services

- name: Deploy upsd.users from template
  template:
    src: upsd.users.j2
    dest: /etc/nut/upsd.users
    owner: root
    group: nut
    mode: 0640
  become: true
  notify: restart nut-services

- name: Deploy upssched.conf from template
  template:
    src: upssched.conf.j2
    dest: /etc/nut/upssched.conf
    owner: root
    group: nut
    mode: 0640
  become: true
  notify: restart nut-services

- name: Deploy upssched-cmd.sh from template
  template:
    src: upssched-cmd.sh.j2
    dest: /etc/nut/upssched-cmd.sh
    owner: root
    group: nut
    mode: 0750
  become: true

- name: Fix monitored pid in nut-monitor.service
  lineinfile:
    path: /lib/systemd/system/nut-monitor.service
    regexp: '^PIDFile='
    line: 'PIDFile=/var/run/nut/nut-monitor.pid'
  become: true
  notify: restart nut-services
  when: ansible_distribution_release == 'bookworm'
  # on bullseye will cause nut-monitor aka nut-client to fail to start

## optional and can be used to shutdown a remote host via ssh if it can't run the NUT client
- name: Deploy ssh private key from encrypted file
  copy:
    src: files/ssh_key.encrypted
    dest: /etc/nut/ssh_key
    owner: root
    group: nut
    mode: 0600
  become: true
  when: shutdown_gateway is defined and shutdown_gateway == true
  
- name: Enable nut services (bullseye)
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  become: true
  loop:
    - nut-driver.service
    - nut-server.service
    - nut-monitor.service
  when: ansible_distribution_release == 'bullseye'

- name: Enable nut services (bookworm)
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  become: true
  loop:
    #- nut-driver@ups.service       # does not seem to be required on bookworm
    - nut-server.service
    - nut-monitor.service
  when: ansible_distribution_release == 'bookworm'
