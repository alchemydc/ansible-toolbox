#!/bin/bash
set -ex

# Stop the Celo daemon before restoring chaindata, regardless of method or storage backend
echo "Stopping celo daemon to restore chaindata"
sudo systemctl stop celo-geth
sleep 3

{% if snapshot_method is defined and snapshot_method == "rsync" and snapshot_storage is defined and snapshot_storage is contains("r2") %}
# rsync from r2 via rclone
echo "Rsyncing chaindata from R2"
rclone sync --s3-upload-cutoff=100M --s3-chunk-size=100M --progress r2:{{ backup_bucket_name }}/chaindata {{ celo_data_dir }}/celo/chaindata 
{% endif %}

{% if snapshot_method is defined and snapshot_method == "rsync" and snapshot_storage is defined and snapshot_storage is contains("gcs") %}
# rsync from GCS via rclone
echo "Rsyncing chaindata from GCS"
rclone --dry-run sync --gcs-bucket-policy-only --progress gcs:{{ backup_bucket_name }}/chaindata/ {{ celo_data_dir }}/celo/chaindata/
{% endif %}

{% if snapshot_method is defined and snapshot_method == "tarball" %}
# restore chaindata using tarball
# these variables are only used for the tarball method
DAY=$(date +%d)
# grab yesterday's snapshot in case today's isn't taken yet
YESTERDAY=$(($DAY -1))
#TIMESTAMP="$(date +%Y-%m)-$YESTERDAY"
# use today for now
TIMESTAMP="$(date +%Y-%m-$DAY)"
# celo foundation seems to be using .tar.zst, and the snapshot isn't regularly updated anymore (?)
SNAPSHOT_URI=https://storage.googleapis.com/celo-chain-backup/{{ network }}/chaindata-$TIMESTAMP.tar.zst
{% if network == 'baklava' %}
echo "Using baklava tarball snapshot"
echo "Deleting existing chaindata"
rm -rfv {{ celo_data_dir }}/baklava/celo/chaindata
echo "Pulling baklava chaindata snapshot from $SNAPSHOT_URI"
curl -Ls "$SNAPSHOT_URI" | lz4 --decompress --to-stdout | tar --directory {{ celo_data_dir }}/baklava/celo -xvf -
{% elif network == 'mainnet' %}
echo "Using mainnet tarball snapshot for restoration"
echo "Deleting existing chaindata"
rm -rfv {{ celo_data_dir }}/celo/chaindata
echo "Pulling chaindata snapshot from $SNAPSHOT_URI"
curl -Ls "$SNAPSHOT_URI" | zstd --decompress --stdout | tar --directory {{ celo_data_dir }}/celo -xvf -
{% endif %}
{% endif %}


echo "Restarting celo-geth service"
sudo systemctl start celo-geth
