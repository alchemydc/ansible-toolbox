#- name: Debug celo-attestation
#  debug:
#    msg: "{{ hostvars[inventory_hostname] }}"

- name: Create celo service user
  user: 
    name: "{{ celo_user }}"
    password: '*'   # pw is locked/disabled.  key auth only + passwordless sudo
    state: present
    shell: /bin/bash
    createhome: yes
    home: "/home/{{ celo_user }}"
    groups:
      - docker

- name: Deploy celo attestation service systemd service file
  template:
    src: celo-attestation.service.j2
    dest: /etc/systemd/system/celo-attestation.service
    owner: root
    group: root
    mode: '0755'
  notify: daemon-reload

- name: Deploy postgres service systemd service file
  template:
    src: postgres.service.j2
    dest: /etc/systemd/system/postgres.service
    owner: root
    group: root
    mode: '0755'
  notify: daemon-reload

- name: Create {{ celo_data_dir }}
  file:
    path: "{{ celo_data_dir }}"
    state: directory
    mode: '0750'
    owner: "{{ celo_user }}"
    group: "{{ celo_user }}"

- name: Create postgres data dir
  file:
    path: "/home/{{ celo_user }}/postgres"
    state: directory
    mode: '0750'
    owner: "{{ celo_user }}"
    group: "{{ celo_user }}"

- name: Deploy celo attestation service config file
  template:
    src: celo_attestation.config.j2
    dest: "{{ celo_data_dir }}/attestation.config"
    owner: "{{ celo_user }}"
    group: "{{ celo_user }}"
    mode: '0640'
  notify: restart attestation

- name: Create keystore
  import_tasks: create_keystore.yml
  tags: "attestation_keystore"

- name: Create docker network for attestation
  community.docker.docker_network:
    name: attestation
    driver_options: { "com.docker.network.driver.mtu": "{{ sdn_mtu }}" }

- name: Enable and start postgres db service
  systemd:
    name: postgres.service
    enabled: yes
    state: started
    daemon_reload: yes

- name: Enable and start celo attestation service
  systemd:
    name: celo-attestation.service
    enabled: yes
    state: started
    daemon_reload: yes
