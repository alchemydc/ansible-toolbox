# iptables template v1.4
*filter
#:INPUT DROP
:INPUT ACCEPT
:FORWARD ACCEPT
:OUTPUT ACCEPT
:LOGANDDROP - [0:0]
# permit loopback traffic
-A INPUT -i lo -j ACCEPT
# temp permit pings (debugging mtu issues)
#-A INPUT -p icmp --icmp-type echo-request -j ACCEPT
# temp permit inbound iperf (debugging mtu issues)
#-A INPUT -p tcp -m state --state NEW -m tcp --dport 5201 -j ACCEPT
# permit inbound connections to wireguard interface
-A INPUT -i wg0 -m state --state NEW -j ACCEPT
# permit rate limited ICMP echoes
-A INPUT -p icmp -m icmp --icmp-type 8 -m hashlimit --hashlimit-upto 5/sec --hashlimit-burst 5 --hashlimit-mode srcip --hashlimit-name icmp-echo-drop -j ACCEPT
# permit established connections
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
# permit SSH from anywhere [consider disabling this once wireguard mgt iface is burned in]
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
# permit inbound wireguard connections 
-A INPUT -p udp -m state --state NEW -m udp --dport 51820 -j ACCEPT
# permit DHCP requests from guests on the private subnet {{ private_subnet }}
-A INPUT -i {{ private_bridge }} -p udp -m udp --dport 67 -j ACCEPT
# permit DNS requests from guests on the private subnet {{ private_subnet }}
-A INPUT -i {{ private_bridge }} -p udp -m udp --dport 53 -j ACCEPT
{% if remote_ups_clients is defined and remote_ups_clients == true %}
# permit NUT server traffic
-A INPUT -s {{ ups_client_subnet }} -p tcp -m tcp --dport {{ nut_port }} -j ACCEPT
{% endif %}

# actively reject connections to RFC1918 addresses on the public interface
-A OUTPUT -o {{ public_bridge }} -d 10.0.0.0/8 -j REJECT
-A OUTPUT -o {{ public_bridge }} -d 172.16.0.0/12 -j ACCEPT
-A OUTPUT -o {{ public_bridge }} -d 192.168.0.0/16 -j REJECT

# log and drop everything else
-A INPUT -j LOGANDDROP
-A LOGANDDROP -m limit --limit 1/sec -j LOG --log-prefix "IPT_" --log-level 7
-A LOGANDDROP -j DROP

# actively reject connections to RFC1918 addresses on the public interface
-A FORWARD -o {{ public_bridge }} -d 10.0.0.0/8 -j REJECT
-A FORWARD -o {{ public_bridge }} -d 172.16.0.0/12 -j REJECT
-A FORWARD -o {{ public_bridge }} -d 192.168.0.0/16 -j REJECT

# permit prometheus connections from {{ anycast_subnets[1] }} to {{ anycast_subnets[0] }}
-A FORWARD -s {{ anycast_subnets[1] }} -d {{ anycast_subnets[0] }} -p tcp --dport 9100 -m state --state NEW -j ACCEPT
# permit http relay traffic from {{ anycast_subnets[1] }} to ingress nodes on {{ anycast_subnets[0] }}
-A FORWARD -s {{ anycast_subnets[1] }} -d 10.10.50.101 -p tcp --dport 80 -m state --state NEW -j ACCEPT
-A FORWARD -s {{ anycast_subnets[1] }} -d 10.10.50.102 -p tcp --dport 80 -m state --state NEW -j ACCEPT
-A FORWARD -s {{ anycast_subnets[1] }} -d 10.10.50.103 -p tcp --dport 80 -m state --state NEW -j ACCEPT
-A FORWARD -s {{ anycast_subnets[1] }} -d 10.10.50.104 -p tcp --dport 80 -m state --state NEW -j ACCEPT
-A FORWARD -s {{ anycast_subnets[1] }} -d 10.10.50.105 -p tcp --dport 80 -m state --state NEW -j ACCEPT
-A FORWARD -s {{ anycast_subnets[1] }} -d 10.10.50.106 -p tcp --dport 80 -m state --state NEW -j ACCEPT
-A FORWARD -s {{ anycast_subnets[1] }} -d 10.10.50.107 -p tcp --dport 80 -m state --state NEW -j ACCEPT
# disallow workloads on anycast_subnet[1] from initiating connections to workloads on anycast_subnet[0]
-A FORWARD -s {{ anycast_subnets[1] }} -d {{ anycast_subnets[0] }} -m state --state NEW -j LOGANDDROP
COMMIT
*raw
:PREROUTING ACCEPT
:OUTPUT ACCEPT
-A PREROUTING -i fwbr+ -j CT --zone 1
COMMIT
*nat
:PREROUTING ACCEPT
:INPUT ACCEPT
:OUTPUT ACCEPT
:POSTROUTING ACCEPT
# permit http/https ingress traffic from anywhere to traefik on the docker_ingress workload
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport 80 -j DNAT --to-destination {{ docker_ingress_host }}:80
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport 443 -j DNAT --to-destination {{ docker_ingress_host }}:443

# permit pokt p2p on port 55656 from anywhere to the sdk-pokt workload
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport 55656 -j DNAT --to-destination {{ pokt_host }}:55656

# celo L2 RPC port forwards
# permit celo-public-rpc op-geth p2p from anywhere to the celo-public-rpc workload
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport {{ celo_op_geth_p2p_port }} -j DNAT --to-destination {{ celo_public_rpc_host }}:{{ celo_op_geth_p2p_port }}
-A PREROUTING -d {{ public_ip }}/32 -p udp -m udp --dport {{ celo_op_geth_p2p_port }} -j DNAT --to-destination {{ celo_public_rpc_host }}:{{ celo_op_geth_p2p_port }}

# permit celo-public-rpc op-node p2p from anywhere to the celo-public-rpc workload
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport {{ celo_op_node_p2p_port }} -j DNAT --to-destination {{ celo_public_rpc_host }}:{{ celo_op_node_p2p_port }}
-A PREROUTING -d {{ public_ip }}/32 -p udp -m udp --dport {{ celo_op_node_p2p_port }} -j DNAT --to-destination {{ celo_public_rpc_host }}:{{ celo_op_node_p2p_port }}

# rocketpool testnet port forwards
# permit p2p traffic to the rocketpool testnet workload
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport {{ rp_testnet_p2p_port }} -j DNAT --to-destination {{ rp_testnet_host }}:{{ rp_testnet_p2p_port }}
-A PREROUTING -d {{ public_ip }}/32 -p udp -m udp --dport {{ rp_testnet_p2p_port }} -j DNAT --to-destination {{ rp_testnet_host }}:{{ rp_testnet_p2p_port }}
# permit CL p2p QUIC traffic to the rocketpool testnet workload
-A PREROUTING -d {{ public_ip }}/32 -p udp -m udp --dport {{ rp_testnet_cl_quic_port }} -j DNAT --to-destination {{ rp_testnet_host }}:{{ rp_testnet_cl_quic_port }}
# permit CL p2p traffic to the rocketpool testnet workload
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport {{ rp_testnet_cl_p2p_port }} -j DNAT --to-destination {{ rp_testnet_host }}:{{ rp_testnet_cl_p2p_port }}
-A PREROUTING -d {{ public_ip }}/32 -p udp -m udp --dport {{ rp_testnet_cl_p2p_port }} -j DNAT --to-destination {{ rp_testnet_host }}:{{ rp_testnet_cl_p2p_port }}

# rocketpool mainnet port forwards
# permit EL p2p traffic to the rocketpool mainnet workload 
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport {{ rp_mainnet_p2p_port }} -j DNAT --to-destination {{ rp_mainnet_host }}:{{ rp_mainnet_p2p_port }}
-A PREROUTING -d {{ public_ip }}/32 -p udp -m udp --dport {{ rp_mainnet_p2p_port }} -j DNAT --to-destination {{ rp_mainnet_host }}:{{ rp_mainnet_p2p_port }}
# permit CL p2p QUIC traffic to the rocketpool mainnet workload
-A PREROUTING -d {{ public_ip }}/32 -p udp -m udp --dport {{ rp_mainnet_cl_quic_port }} -j DNAT --to-destination {{ rp_mainnet_host }}:{{ rp_mainnet_cl_quic_port }}
# permit CL p2p traffic to the rocketpool mainnet workload
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport {{ rp_mainnet_cl_p2p_port }} -j DNAT --to-destination {{ rp_mainnet_host }}:{{ rp_mainnet_cl_p2p_port }}
-A PREROUTING -d {{ public_ip }}/32 -p udp -m udp --dport {{ rp_mainnet_cl_p2p_port }} -j DNAT --to-destination {{ rp_mainnet_host }}:{{ rp_mainnet_cl_p2p_port }}

# rocketpool failover port forwards
# permit EL p2p traffic to the rocketpool failover workload 
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport {{ rp_failover_p2p_port }} -j DNAT --to-destination {{ rp_failover_host }}:{{ rp_failover_p2p_port }}
-A PREROUTING -d {{ public_ip }}/32 -p udp -m udp --dport {{ rp_failover_p2p_port }} -j DNAT --to-destination {{ rp_failover_host }}:{{ rp_failover_p2p_port }}
# permit CL p2p QUIC traffic to the rocketpool failover workload
-A PREROUTING -d {{ public_ip }}/32 -p udp -m udp --dport {{ rp_failover_cl_quic_port }} -j DNAT --to-destination {{ rp_failover_host }}:{{ rp_failover_cl_quic_port }}
# permit CL p2p traffic to the rocketpool failover workload
-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport {{ rp_failover_cl_p2p_port }} -j DNAT --to-destination {{ rp_failover_host }}:{{ rp_failover_cl_p2p_port }}
-A PREROUTING -d {{ public_ip }}/32 -p udp -m udp --dport {{ rp_failover_cl_p2p_port }} -j DNAT --to-destination {{ rp_failover_host }}:{{ rp_failover_cl_p2p_port }}

# stacks port forwards
#-A PREROUTING -d {{ public_ip }}/32 -p tcp -m tcp --dport {{ stacks_mainnet_p2p_port }} -j DNAT --to-destination {{ stacks_mainnet_host }}:{{ stacks_mainnet_p2p_port }}

# SNAT's for outbound traffic
# SNAT traffic from private subnet guests
-A POSTROUTING -s {{ private_subnet }}  -o {{ public_bridge }} -j SNAT --to-source {{ public_ip }}
# SNAT traffic from private admin hosts
-A POSTROUTING -s {{ admin_net }}  -o {{ public_bridge }} -j SNAT --to-source {{ public_ip }}
# SNAT traffic from SDN subnet guests
{% for anycast_subnet in anycast_subnets %}
-A POSTROUTING -s {{ anycast_subnet }}  -o {{ public_bridge }} -j SNAT --to-source {{ public_ip }}
{% endfor%}

COMMIT
